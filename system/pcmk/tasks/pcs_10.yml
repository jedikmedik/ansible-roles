---
- name: Get pcs status (just in case?)
  command: >
    pcs status
  register: pcmk_reg_status
  changed_when: false
  failed_when:
    - pcmk_reg_status.rc != 0
    - pcmk_reg_status.stderr is not search('cluster is not currently running on this node')

- name: Get pcs cluster status
  command: >
    pcs cluster status
  register: pcmk_reg_cluster_status
  changed_when: false
  failed_when:
    - pcmk_reg_cluster_status.rc != 0
    - pcmk_reg_cluster_status.stderr is not search('cluster is not currently running on this node')

- name: Password + iptables section
  block:
    - name: Generate password
      set_fact:
        pcmk_hacluster_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
      when: inventory_hostname == pcmk_master

    - name: Set password fact
      set_fact:
        pcmk_hacluster_password: "{{ hostvars[pcmk_master]['pcmk_hacluster_password'] }}"
      when: inventory_hostname != pcmk_master

    - name: Set hacluster password
      user:
        name: hacluster
        password: "{{ pcmk_hacluster_password|password_hash('sha512', '3454') }}"
  when: pcmk_reg_cluster_status.stdout is not search('Cluster Status')

- name: PCSd service enabled
  systemd:
    name: pcsd.service
    state: started
    enabled: yes
  register: pcmk_reg_pcsd_start

- name: Pause for 5s
  pause:
    seconds: 5
  when: pcmk_reg_pcsd_start.changed

- name: Touch corosync.conf
  command: >
    touch /etc/corosync/corosync.conf
  args:
    creates: /etc/corosync/corosync.conf
    warn: False

- name: master section
  block:
    - name: Auth cluster
      command: >
        pcs cluster auth
        -u hacluster -p {{ pcmk_hacluster_password }}
      register: pcmk_reg_auth
      changed_when: pcmk_reg_auth.stdout is not search('Already authorized')

    - name: Auth cluster members
      command: >
        pcs host auth
        {% for node in groups[pcmk_pool] %}
        {{ node }}
        {% endfor %}
        -u hacluster -p {{ pcmk_hacluster_password }}

    - name: Cluster setup
      command: >
        pcs cluster setup
        {{ pcmk_cluster_name|d('CLUSTER-' ~ pcmk_pool|upper) }}
        {% for node in groups[pcmk_pool] %}
        {{ node }}
        {% endfor %}
        transport udpu --force

    - name: cluster start
      command: >
        pcs cluster start --all
  when:
    - inventory_hostname == pcmk_master
    - pcmk_reg_cluster_status.stdout is not search('Cluster Status')
...
